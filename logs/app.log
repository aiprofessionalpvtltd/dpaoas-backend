[32m[info]: Nov-01-2023 16:41:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-01-2023 16:47:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 14:13:55: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-08-2023 14:13:55: 	uncaughtException: listen EADDRINUSE: address already in use :::8080[39m
[31mError: listen EADDRINUSE: address already in use :::8080[39m
[31m    at Server.setupListenHandle [as _listen2] (node:net:1740:16)[39m
[31m    at listenInCluster (node:net:1788:12)[39m
[31m    at Server.listen (node:net:1876:7)[39m
[31m    at Function.listen (D:\dpaoas\node_modules\express\lib\application.js:635:24)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:27:5)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[32m[info]: Nov-08-2023 14:14:53: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-08-2023 14:14:53: 	uncaughtException: listen EADDRINUSE: address already in use :::8080[39m
[31mError: listen EADDRINUSE: address already in use :::8080[39m
[31m    at Server.setupListenHandle [as _listen2] (node:net:1740:16)[39m
[31m    at listenInCluster (node:net:1788:12)[39m
[31m    at Server.listen (node:net:1876:7)[39m
[31m    at Function.listen (D:\dpaoas\node_modules\express\lib\application.js:635:24)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:27:5)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[32m[info]: Nov-08-2023 14:15:20: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-08-2023 14:15:20: 	uncaughtException: listen EADDRINUSE: address already in use :::8080[39m
[31mError: listen EADDRINUSE: address already in use :::8080[39m
[31m    at Server.setupListenHandle [as _listen2] (node:net:1740:16)[39m
[31m    at listenInCluster (node:net:1788:12)[39m
[31m    at Server.listen (node:net:1876:7)[39m
[31m    at Function.listen (D:\dpaoas\node_modules\express\lib\application.js:635:24)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:27:5)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[32m[info]: Nov-08-2023 14:15:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 14:15:42: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-08-2023 14:15:43: 	uncaughtException: listen EADDRINUSE: address already in use :::5000[39m
[31mError: listen EADDRINUSE: address already in use :::5000[39m
[31m    at Server.setupListenHandle [as _listen2] (node:net:1740:16)[39m
[31m    at listenInCluster (node:net:1788:12)[39m
[31m    at Server.listen (node:net:1876:7)[39m
[31m    at Function.listen (D:\dpaoas\node_modules\express\lib\application.js:635:24)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:27:5)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[32m[info]: Nov-08-2023 14:19:33: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-08-2023 14:19:33: 	uncaughtException: listen EADDRINUSE: address already in use :::5000[39m
[31mError: listen EADDRINUSE: address already in use :::5000[39m
[31m    at Server.setupListenHandle [as _listen2] (node:net:1740:16)[39m
[31m    at listenInCluster (node:net:1788:12)[39m
[31m    at Server.listen (node:net:1876:7)[39m
[31m    at Function.listen (D:\dpaoas\node_modules\express\lib\application.js:635:24)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:27:5)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[32m[info]: Nov-08-2023 14:31:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 14:31:47: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 15:35:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 15:47:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 15:47:09: 	User logged in successfully[39m
[32m[info]: Nov-08-2023 15:49:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 15:49:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 15:50:41: 	User logged in successfully[39m
[32m[info]: Nov-08-2023 15:54:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 15:54:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 15:55:21: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:01:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:04:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:05:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:30:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:33:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:33:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:33:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:36:15: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:36:31: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:36:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:37:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:41:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:47:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:47:37: 	User logged in successfully[39m
[32m[info]: Nov-08-2023 16:47:48: 	User logged in successfully[39m
[32m[info]: Nov-08-2023 16:57:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:57:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 16:58:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-08-2023 17:00:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-09-2023 12:45:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:16:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:16:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:16:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:24:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:25:13: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:25:18: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:29:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:30:04: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:30:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:30:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:33:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:33:47: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 09:33:59: 	Permission assigned successfully![39m
[32m[info]: Nov-10-2023 10:12:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:13:07: 	Permission assigned successfully![39m
[32m[info]: Nov-10-2023 10:15:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:16:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:17:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:18:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:18:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:19:03: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-10-2023 10:19:03: 	uncaughtException: Route.post() requires a callback function but got a [object Undefined][39m
[31mError: Route.post() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\roles.route.js:7:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:20:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-10-2023 10:19:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:19:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:19:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:19:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:20:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:27:08: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:29:12: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-10-2023 10:29:12: 	uncaughtException: Route.post() requires a callback function but got a [object Undefined][39m
[31mError: Route.post() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\modules.route.js:7:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:23:34)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-10-2023 10:29:59: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-10-2023 10:29:59: 	uncaughtException: Route.post() requires a callback function but got a [object Undefined][39m
[31mError: Route.post() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\modules.route.js:7:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:23:34)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-10-2023 10:30:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:31:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:31:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:31:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:32:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:33:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:34:22: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:35:10: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:36:35: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:37:10: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:37:36: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-10-2023 10:37:37: 	uncaughtException: Route.post() requires a callback function but got a [object Undefined][39m
[31mError: Route.post() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\permissions.route.js:7:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:22:38)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-10-2023 10:38:34: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-10-2023 10:38:34: 	uncaughtException: Route.post() requires a callback function but got a [object Undefined][39m
[31mError: Route.post() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\permissions.route.js:7:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:22:38)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-10-2023 10:39:06: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-10-2023 10:39:07: 	uncaughtException: Route.post() requires a callback function but got a [object Undefined][39m
[31mError: Route.post() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\permissions.route.js:7:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:22:38)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-10-2023 10:39:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:40:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:41:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:42:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:43:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:43:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:43:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:43:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:49:00: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:50:03: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-10-2023 10:50:04: 	uncaughtException: Route.post() requires a callback function but got a [object Undefined][39m
[31mError: Route.post() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as post] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:7:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-10-2023 10:53:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 10:56:15: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 11:01:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 14:18:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 14:31:32: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 14:36:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 14:59:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 14:59:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:00:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:00:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:00:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:00:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:00:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:01:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:01:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:11:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:13:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:13:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:14:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:14:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:15:47: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:18:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:18:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:19:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:19:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:20:13: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:20:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:23:08: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:24:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:26:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:27:15: 	User logged in successfully[39m
[32m[info]: Nov-10-2023 15:27:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:27:37: 	User logged in successfully[39m
[32m[info]: Nov-10-2023 15:27:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:27:51: 	User logged in successfully[39m
[32m[info]: Nov-10-2023 15:28:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:28:27: 	User logged in successfully[39m
[32m[info]: Nov-10-2023 15:28:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:28:44: 	User logged in successfully[39m
[33m[warn]: Nov-10-2023 15:28:58: 	Login failed: Password invalid[39m
[31m[error]: Nov-10-2023 15:28:58: 	An error occurred during login Password invalid[39m
[32m[info]: Nov-10-2023 15:29:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:29:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:29:33: 	Server Logger has been started Successfully[39m
[33m[warn]: Nov-10-2023 15:30:43: 	Login failed: Password invalid[39m
[31m[error]: Nov-10-2023 15:30:43: 	An error occurred during login Password invalid[39m
[32m[info]: Nov-10-2023 15:30:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:33:13: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:33:19: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:36:15: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:36:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:37:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:37:38: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:38:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:39:11: 	User Logged In Successfully![39m
[32m[info]: Nov-10-2023 15:39:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:40:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:42:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:42:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:44:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:44:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:46:39: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:48:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:50:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:50:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:52:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:53:02: 	Permission Assigned to Role Successfully![39m
[32m[info]: Nov-10-2023 15:56:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 15:56:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:13:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:14:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:15:31: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:15:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:16:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:16:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:18:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:20:04: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:21:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:23:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:23:38: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:25:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-10-2023 16:26:11: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 09:33:32: 	Error Logging User![39m
[32m[info]: Nov-13-2023 09:43:58: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 09:44:03: 	Error Logging User: Internal server error[39m
[31m[error]: Nov-13-2023 09:44:41: 	Error Logging User: Internal server error[39m
[31m[error]: Nov-13-2023 09:45:46: 	Error Logging User: Internal server error[39m
[32m[info]: Nov-13-2023 09:45:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 09:46:18: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 09:46:23: 	Internal server error[39m
[31m[error]: Nov-13-2023 09:46:38: 	Internal server error[39m
[32m[info]: Nov-13-2023 09:46:56: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 09:47:22: 	Internal server error[39m
[32m[info]: Nov-13-2023 09:48:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 09:48:19: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 09:48:32: 	Invalid Credentials[39m
[31m[error]: Nov-13-2023 09:48:33: 	Invalid Credentials[39m
[32m[info]: Nov-13-2023 09:49:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 09:49:33: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 09:49:43: 	Password invalid[39m
[32m[info]: Nov-13-2023 09:50:01: 	User Logged In Successfully![39m
[32m[info]: Nov-13-2023 09:52:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 09:53:41: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 09:53:48: 	uncaughtException: Cannot read properties of undefined (reading 'json')[39m
[31mTypeError: Cannot read properties of undefined (reading 'json')[39m
[31m    at loginUser (D:\dpaoas\controllers\users.controller.js:60:29)[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[32m[info]: Nov-13-2023 09:56:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 09:57:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 09:57:57: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 10:01:37: 	Password invalid[39m
[31m[error]: Nov-13-2023 10:02:22: 	E-mail address does not exist.[39m
[32m[info]: Nov-13-2023 10:03:34: 	User Logged In Successfully![39m
[32m[info]: Nov-13-2023 10:04:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:04:31: 	User Logged In Successfully![39m
[32m[info]: Nov-13-2023 10:04:32: 	User Logged In Successfully![39m
[32m[info]: Nov-13-2023 10:04:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:07:08: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:07:14: 	User Logged In Successfully![39m
[31m[error]: Nov-13-2023 10:07:18: 	Invalid Password[39m
[32m[info]: Nov-13-2023 10:08:09: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 10:08:20: 	Please provide both email and password.[39m
[31m[error]: Nov-13-2023 10:08:26: 	Invalid Password[39m
[31m[error]: Nov-13-2023 10:08:31: 	Invalid Email[39m
[32m[info]: Nov-13-2023 10:08:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:11:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:12:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:12:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:12:21: 	All Users Fetched Successfully![39m
[31m[error]: Nov-13-2023 10:12:42: 	userData is not defined[39m
[32m[info]: Nov-13-2023 10:13:19: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 10:13:33: 	[object Object][39m
[32m[info]: Nov-13-2023 10:14:51: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 10:15:02: 	[object Object][39m
[31m[error]: Nov-13-2023 10:15:11: 	[object Object][39m
[31m[error]: Nov-13-2023 10:15:19: 	[object Object][39m
[32m[info]: Nov-13-2023 10:15:22: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:16:33: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 10:17:52: 	Invalid Email[39m
[32m[info]: Nov-13-2023 10:18:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:20:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:20:32: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:21:06: 	Role Created Successfully![39m
[32m[info]: Nov-13-2023 10:21:24: 	User Created Successfully![39m
[31m[error]: Nov-13-2023 10:21:35: 	Please provide a name and role ID.[39m
[31m[error]: Nov-13-2023 10:21:48: 	Role not found![39m
[32m[info]: Nov-13-2023 10:22:21: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 10:22:35: 	[object Object][39m
[32m[info]: Nov-13-2023 10:23:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:23:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:24:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:26:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:27:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:27:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:28:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:28:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:30:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:30:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:31:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:32:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:34:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:40:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:41:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 10:58:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:00:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:00:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:00:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:01:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:01:22: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:01:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:01:39: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:02:47: 	Permission Created Successfully![39m
[32m[info]: Nov-13-2023 11:03:25: 	Permission Assigned to Role Successfully![39m
[32m[info]: Nov-13-2023 11:04:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:04:30: 	Permission Assigned to Role Successfully![39m
[32m[info]: Nov-13-2023 11:05:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:05:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:05:42: 	Module Created Successfully![39m
[32m[info]: Nov-13-2023 11:06:36: 	Permission Assigned to Module Successfully![39m
[32m[info]: Nov-13-2023 11:10:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:10:50: 	Permission Assigned to Module Successfully![39m
[32m[info]: Nov-13-2023 11:10:56: 	Permission Assigned to Module Successfully![39m
[31m[error]: Nov-13-2023 11:11:05: 	Error Assigning Permission to Role![39m
[32m[info]: Nov-13-2023 11:12:10: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 11:12:21: 	Error Assigning Permission to Role![39m
[31m[error]: Nov-13-2023 11:12:39: 	Error Assigning Permission to Role![39m
[32m[info]: Nov-13-2023 11:15:07: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 11:15:13: 	Permission Not Found![39m
[31m[error]: Nov-13-2023 11:15:18: 	Link already exists![39m
[32m[info]: Nov-13-2023 11:15:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-13-2023 11:16:40: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-13-2023 11:16:52: 	Module and Permission Already Exists![39m
[32m[info]: Nov-15-2023 12:18:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:19:00: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:20:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:22:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:23:32: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:26:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:27:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:28:08: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:28:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:29:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 12:43:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 13:46:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 13:51:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 13:54:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 14:02:19: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 14:02:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 14:06:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 14:09:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 14:14:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 14:15:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 14:17:40: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:17:41: 	uncaughtException: invalid input value for enum "enum_requestLeaves_requestStatus": ""[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeave.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:18:43: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:18:44: 	uncaughtException: relation "leaveType" does not exist[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeave.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:23:00: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:23:01: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeave.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:23:09: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:23:10: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeave.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:23:48: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:23:49: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeave.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:24:33: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:24:35: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:27:45: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:27:46: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:27:56: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:27:58: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:30:22: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:30:24: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:31:34: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:31:35: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:32:20: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:32:21: 	uncaughtException: foreign key constraint "requestLeaves_fkRequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:32:28: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:32:29: 	uncaughtException: foreign key constraint "requestLeaves_RequestTypeId_fkey" cannot be implemented[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:34:12: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:34:13: 	uncaughtException: invalid input value for enum "enum_requestLeaves_requestStatus": ""[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:34:41: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-15-2023 14:34:42: 	uncaughtException: invalid input value for enum "enum_requestLeaves_requestStatus": ""[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async requestLeaves.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-15-2023 14:34:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-15-2023 14:35:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 10:33:50: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 10:33:54: 	uncaughtException: Route.get() requires a callback function but got a [object Object][39m
[31mError: Route.get() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:14:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-16-2023 10:34:51: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 10:34:51: 	uncaughtException: Route.get() requires a callback function but got a [object Object][39m
[31mError: Route.get() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:14:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-16-2023 10:35:05: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 10:35:05: 	uncaughtException: Route.get() requires a callback function but got a [object Object][39m
[31mError: Route.get() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:14:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-16-2023 10:35:18: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 10:35:19: 	uncaughtException: Route.get() requires a callback function but got a [object Object][39m
[31mError: Route.get() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:14:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-16-2023 10:35:31: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 10:35:31: 	uncaughtException: Route.get() requires a callback function but got a [object Object][39m
[31mError: Route.get() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:14:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-16-2023 10:37:03: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 10:37:18: 	Invalid Email![39m
[31m[error]: Nov-16-2023 10:37:24: 	Invalid Email![39m
[31m[error]: Nov-16-2023 10:37:36: 	Invalid Password![39m
[32m[info]: Nov-16-2023 10:37:57: 	User Logged In Successfully![39m
[32m[info]: Nov-16-2023 10:39:32: 	All Users Fetched Successfully![39m
[32m[info]: Nov-16-2023 10:41:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 10:49:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 10:50:30: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 10:50:53: 	Invalid Token:[39m
[31m[error]: Nov-16-2023 10:50:59: 	Please Provide Token![39m
[32m[info]: Nov-16-2023 10:51:15: 	All Users Fetched Successfully![39m
[31m[error]: Nov-16-2023 10:51:33: 	Invalid Token:[39m
[32m[info]: Nov-16-2023 10:52:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 10:53:04: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 10:53:10: 	Invalid Token[39m
[32m[info]: Nov-16-2023 10:54:32: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:03:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:04:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:08:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:10:54: 	Permission Created Successfully![39m
[32m[info]: Nov-16-2023 11:11:07: 	Permission Assigned to Role Successfully![39m
[32m[info]: Nov-16-2023 11:11:32: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 11:12:31: 	uncaughtException: Cannot read properties of undefined (reading 'call')[39m
[31mTypeError: Cannot read properties of undefined (reading 'call')[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\model.js:598:30[39m
[31m    at Array.forEach (<anonymous>)[39m
[31m    at String._expandIncludeAll (D:\dpaoas\node_modules\sequelize\lib\model.js:597:14)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\model.js:598:30[39m
[31m    at Array.forEach (<anonymous>)[39m
[31m    at rolesPermissions._expandIncludeAll (D:\dpaoas\node_modules\sequelize\lib\model.js:597:14)[39m
[31m    at rolesPermissions.findAll (D:\dpaoas\node_modules\sequelize\lib\model.js:1117:10)[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async D:\dpaoas\middleware\auth.js:65:27[39m
[32m[info]: Nov-16-2023 11:12:53: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 11:13:06: 	uncaughtException: Cannot read properties of undefined (reading 'call')[39m
[31mTypeError: Cannot read properties of undefined (reading 'call')[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\model.js:598:30[39m
[31m    at Array.forEach (<anonymous>)[39m
[31m    at String._expandIncludeAll (D:\dpaoas\node_modules\sequelize\lib\model.js:597:14)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\model.js:598:30[39m
[31m    at Array.forEach (<anonymous>)[39m
[31m    at rolesPermissions._expandIncludeAll (D:\dpaoas\node_modules\sequelize\lib\model.js:597:14)[39m
[31m    at rolesPermissions.findAll (D:\dpaoas\node_modules\sequelize\lib\model.js:1117:10)[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async D:\dpaoas\middleware\auth.js:65:27[39m
[32m[info]: Nov-16-2023 11:16:36: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 11:16:37: 	uncaughtException: Route.get() requires a callback function but got a [object Promise][39m
[31mError: Route.get() requires a callback function but got a [object Promise][39m
[31m    at Route.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as get] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:14:12)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[31m[error]: Nov-16-2023 11:16:37: 	Error during role permission verification:[39m
[31m[error]: Nov-16-2023 11:16:37: 	uncaughtException: Cannot read properties of undefined (reading 'status')[39m
[31mTypeError: Cannot read properties of undefined (reading 'status')[39m
[31m    at Object.rolePermissionVerification (D:\dpaoas\middleware\auth.js:91:11)[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[32m[info]: Nov-16-2023 11:28:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:28:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:29:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:29:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:34:33: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 11:34:33: 	uncaughtException: Unexpected token ';'[39m
[31mD:\dpaoas\middleware\auth.js:97[39m
[31m};[39m
[31m ^[39m

[31mSyntaxError: Unexpected token ';'[39m
[31m    at internalCompileFunction (node:internal/vm:73:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1166:20)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1210:27)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:3:23)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[32m[info]: Nov-16-2023 11:34:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:34:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:36:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:51:10: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:51:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:52:15: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:54:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:54:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:54:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:54:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 11:55:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:26:56: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:30:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:30:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:31:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:33:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:34:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:35:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:36:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:37:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:37:33: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 12:37:54: 	Please Provide Token![39m
[32m[info]: Nov-16-2023 12:38:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:40:05: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:40:25: 	User Created Successfully![39m
[32m[info]: Nov-16-2023 12:40:36: 	User Logged In Successfully![39m
[32m[info]: Nov-16-2023 12:41:21: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:46:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:47:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:47:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:48:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:50:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:52:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:52:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 12:53:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:16:31: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:17:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:17:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:18:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:18:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:19:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:20:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:20:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:20:32: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:22:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:22:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:23:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:27:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:28:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:28:34: 	All Users Fetched Successfully![39m
[32m[info]: Nov-16-2023 14:28:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:29:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:29:59: 	All Users Fetched Successfully![39m
[32m[info]: Nov-16-2023 14:41:10: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 14:41:11: 	uncaughtException: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31mError: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31m    at Module._resolveFilename (node:internal/modules/cjs/loader:1060:15)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:905:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:3:23)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[32m[info]: Nov-16-2023 14:41:35: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 14:41:36: 	uncaughtException: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31mError: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31m    at Module._resolveFilename (node:internal/modules/cjs/loader:1060:15)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:905:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:3:23)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[32m[info]: Nov-16-2023 14:41:53: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 14:41:53: 	uncaughtException: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31mError: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31m    at Module._resolveFilename (node:internal/modules/cjs/loader:1060:15)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:905:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:3:23)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[32m[info]: Nov-16-2023 14:43:51: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 14:43:51: 	uncaughtException: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31mError: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31m    at Module._resolveFilename (node:internal/modules/cjs/loader:1060:15)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:905:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:3:23)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[32m[info]: Nov-16-2023 14:44:06: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 14:44:06: 	uncaughtException: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31mError: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31m    at Module._resolveFilename (node:internal/modules/cjs/loader:1060:15)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:905:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:3:23)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[32m[info]: Nov-16-2023 14:45:14: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 14:45:15: 	uncaughtException: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31mError: Cannot find module '../middleware/auth'[39m
[31mRequire stack:[39m
[31m- D:\dpaoas\routes\users.route.js[39m
[31m- D:\dpaoas\server.js[39m
[31m    at Module._resolveFilename (node:internal/modules/cjs/loader:1060:15)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:905:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:3:23)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[32m[info]: Nov-16-2023 14:45:22: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:45:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:45:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:45:46: 	All Users Fetched Successfully![39m
[32m[info]: Nov-16-2023 14:45:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:49:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:51:47: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 14:52:07: 	Please Provide Token![39m
[32m[info]: Nov-16-2023 14:53:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:53:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:59:15: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 14:59:56: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 15:00:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 16:47:53: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 16:49:27: 	Error updating user: Cannot read properties of undefined (reading 'id')[39m
[32m[info]: Nov-16-2023 16:50:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 16:51:09: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 16:51:16: 	Error updating user: Cannot read properties of undefined (reading 'id')[39m
[32m[info]: Nov-16-2023 17:21:12: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 17:21:26: 	Error updating user: Please provide name and roleId in the request body![39m
[32m[info]: Nov-16-2023 17:25:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 17:25:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 17:26:10: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 17:26:14: 	Error updating user: Role Not Found![39m
[32m[info]: Nov-16-2023 17:26:51: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 17:26:51: 	uncaughtException: Unexpected token '.'[39m
[31mD:\dpaoas\services\users.service.js:118[39m
[31m          const updatedUserData = { req.body };[39m
[31m                                       ^[39m

[31mSyntaxError: Unexpected token '.'[39m
[31m    at internalCompileFunction (node:internal/vm:73:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1166:20)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1210:27)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at Object.<anonymous> (D:\dpaoas\controllers\users.controller.js:1:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[32m[info]: Nov-16-2023 17:27:08: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 17:27:15: 	Error updating user: password is not defined[39m
[32m[info]: Nov-16-2023 17:27:48: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-16-2023 17:27:54: 	Error updating user: password is not defined[39m
[32m[info]: Nov-16-2023 17:28:22: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 17:28:29: 	User Updated Successfully![39m
[32m[info]: Nov-16-2023 17:29:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 17:29:41: 	User Updated Successfully![39m
[32m[info]: Nov-16-2023 17:30:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 17:31:29: 	User Updated Successfully![39m
[32m[info]: Nov-16-2023 17:32:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-16-2023 17:32:24: 	User Updated Successfully![39m
[32m[info]: Nov-16-2023 17:33:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:14:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:14:57: 	User Updated Successfully![39m
[32m[info]: Nov-17-2023 09:15:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:15:49: 	User Updated Successfully![39m
[32m[info]: Nov-17-2023 09:16:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:17:11: 	Role Created Successfully![39m
[32m[info]: Nov-17-2023 09:17:22: 	Role Created Successfully![39m
[31m[error]: Nov-17-2023 09:18:44: 	Error updating user: Please provide name and roleId in the request body![39m
[32m[info]: Nov-17-2023 09:19:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:19:10: 	User Updated Successfully![39m
[32m[info]: Nov-17-2023 09:19:38: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:20:01: 	User Updated Successfully![39m
[32m[info]: Nov-17-2023 09:22:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:23:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:24:12: 	User Updated Successfully![39m
[32m[info]: Nov-17-2023 09:25:31: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:26:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:28:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:28:39: 	User Updated Successfully![39m
[32m[info]: Nov-17-2023 09:29:33: 	User Updated Successfully![39m
[31m[error]: Nov-17-2023 09:29:53: 	Invalid Email![39m
[31m[error]: Nov-17-2023 09:30:19: 	Invalid Password![39m
[32m[info]: Nov-17-2023 09:30:23: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:31:08: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:31:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:31:20: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:37:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:38:14: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 09:38:19: 	roles is not associated to users![39m
[32m[info]: Nov-17-2023 09:40:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:40:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:41:01: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:41:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:41:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:41:34: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:42:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:42:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:42:50: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:43:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:43:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:43:34: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:44:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:47:05: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:47:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:47:17: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:47:40: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 09:47:47: 	WHERE parameter "name" has invalid "undefined" value[39m
[32m[info]: Nov-17-2023 09:51:16: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 09:51:16: 	uncaughtException: Unexpected token '.'[39m
[31mD:\dpaoas\services\users.service.js:97[39m
[31m              return { token, user , roles. permissions  };[39m
[31m                                          ^[39m

[31mSyntaxError: Unexpected token '.'[39m
[31m    at internalCompileFunction (node:internal/vm:73:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1166:20)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1210:27)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at Object.<anonymous> (D:\dpaoas\controllers\users.controller.js:1:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[32m[info]: Nov-17-2023 09:51:19: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:51:23: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:55:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:56:08: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:56:10: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:56:21: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 09:57:13: 	Permission Created Successfully![39m
[32m[info]: Nov-17-2023 09:57:20: 	Permission Created Successfully![39m
[32m[info]: Nov-17-2023 09:58:04: 	Permission Assigned to Role Successfully![39m
[32m[info]: Nov-17-2023 09:58:09: 	Permission Assigned to Role Successfully![39m
[32m[info]: Nov-17-2023 09:58:15: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 09:59:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 10:03:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 10:06:05: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 10:06:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 10:09:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 10:09:41: 	User Deleted Successfully![39m
[32m[info]: Nov-17-2023 10:10:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 10:13:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 10:13:19: 	User Deleted Successfully![39m
[32m[info]: Nov-17-2023 10:13:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 10:13:46: 	User Deleted Successfully![39m
[32m[info]: Nov-17-2023 10:13:49: 	User Deleted Successfully![39m
[32m[info]: Nov-17-2023 11:28:04: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:28:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:29:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:30:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:30:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:32:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:33:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:37:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:37:38: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:37:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:38:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:38:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:39:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:40:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:41:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:41:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 11:42:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:00:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:03:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:03:38: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 12:04:48: 	Error Deleting User![39m
[32m[info]: Nov-17-2023 12:09:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:09:50: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 12:09:51: 	uncaughtException: invalid input value for enum enum_users_gender: ""[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async users.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-17-2023 12:10:59: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 12:11:00: 	uncaughtException: invalid input value for enum enum_users_gender: ""[39m
[31mError[39m
[31m    at Query.run (D:\dpaoas\node_modules\sequelize\lib\dialects\postgres\query.js:50:25)[39m
[31m    at D:\dpaoas\node_modules\sequelize\lib\sequelize.js:315:28[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[31m    at async PostgresQueryInterface.createTable (D:\dpaoas\node_modules\sequelize\lib\dialects\abstract\query-interface.js:98:12)[39m
[31m    at async users.sync (D:\dpaoas\node_modules\sequelize\lib\model.js:942:7)[39m
[31m    at async Sequelize.sync (D:\dpaoas\node_modules\sequelize\lib\sequelize.js:377:9)[39m
[32m[info]: Nov-17-2023 12:12:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:15:21: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:15:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:15:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:15:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:16:04: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:16:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:16:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:18:05: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:18:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:22:35: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:22:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:23:08: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:23:56: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:24:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:25:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:25:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:25:34: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 12:27:06: 	departmentsService.c is not a function[39m
[32m[info]: Nov-17-2023 12:27:24: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 12:27:25: 	Error Creating Department![39m
[32m[info]: Nov-17-2023 12:28:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:28:22: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 12:28:27: 	Error Creating Department![39m
[31m[error]: Nov-17-2023 12:28:42: 	Error Creating Department![39m
[32m[info]: Nov-17-2023 12:30:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:30:19: 	Department Created Successfully![39m
[32m[info]: Nov-17-2023 12:32:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:33:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:35:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:35:56: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:36:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:38:09: 	Designation Created Successfully![39m
[31m[error]: Nov-17-2023 12:39:02: 	Please provide full name, roleID, departmentID and designationID![39m
[31m[error]: Nov-17-2023 12:39:12: 	column "roleStatus" does not exist[39m
[32m[info]: Nov-17-2023 12:41:20: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 12:41:36: 	column "roleStatus" does not exist[39m
[31m[error]: Nov-17-2023 12:43:43: 	Error Creating Role![39m
[32m[info]: Nov-17-2023 12:44:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:44:24: 	Role Created Successfully![39m
[32m[info]: Nov-17-2023 12:44:38: 	User Created Successfully![39m
[32m[info]: Nov-17-2023 12:46:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:46:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:47:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:47:39: 	Department Created Successfully![39m
[32m[info]: Nov-17-2023 12:47:59: 	Designation Created Successfully![39m
[32m[info]: Nov-17-2023 12:48:09: 	User Created Successfully![39m
[32m[info]: Nov-17-2023 12:51:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:51:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:51:19: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 12:51:29: 	Department Created Successfully![39m
[32m[info]: Nov-17-2023 12:51:35: 	Designation Created Successfully![39m
[32m[info]: Nov-17-2023 12:51:41: 	User Created Successfully![39m
[32m[info]: Nov-17-2023 13:27:19: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 13:28:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 13:30:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 13:31:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 13:32:09: 	Single Department Fetched Successfully![39m
[31m[error]: Nov-17-2023 13:32:09: 	res is not defined[39m
[31m[error]: Nov-17-2023 13:32:09: 	uncaughtException: res is not defined[39m
[31mReferenceError: res is not defined[39m
[31m    at findSinlgeDepartment (D:\dpaoas\controllers\departments.controller.js:55:13)[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[32m[info]: Nov-17-2023 13:32:31: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 13:32:36: 	Single Department Fetched Successfully![39m
[32m[info]: Nov-17-2023 13:32:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 13:33:31: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:19:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:19:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:25:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:26:05: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:28:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:29:35: 	Single Department Updated Successfully![39m
[32m[info]: Nov-17-2023 14:30:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:31:45: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:31:50: 	undefined[39m
[32m[info]: Nov-17-2023 14:32:19: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:32:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:33:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:33:09: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:33:12: 	undefined[39m
[32m[info]: Nov-17-2023 14:33:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:34:13: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:34:26: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:35:13: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:35:19: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:35:38: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:35:45: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:36:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:38:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:38:45: 	Single Department Updated Successfully![39m
[31m[error]: Nov-17-2023 14:39:12: 	Error Fetching Single Department[39m
[32m[info]: Nov-17-2023 14:39:35: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:39:39: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:40:02: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:40:06: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:41:59: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:42:13: 	Error Updating Department[39m
[31m[error]: Nov-17-2023 14:42:16: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:43:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:43:12: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:43:17: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:43:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:43:40: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:44:01: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:44:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:44:36: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:44:56: 	Error Updating Department[39m
[32m[info]: Nov-17-2023 14:45:34: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:45:40: 	Error Updating Department[39m
[31m[error]: Nov-17-2023 14:45:40: 	uncaughtException: message is not defined[39m
[31mReferenceError: message is not defined[39m
[31m    at updateDepartment (D:\dpaoas\controllers\departments.controller.js:77:24)[39m
[31m    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)[39m
[32m[info]: Nov-17-2023 14:46:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:50:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:51:19: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:52:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:52:20: 	Single Department Suspend/Deleted Successfully![39m
[32m[info]: Nov-17-2023 14:53:24: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 14:53:46: 	Department Not Found![39m
[32m[info]: Nov-17-2023 14:54:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:54:35: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:57:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:58:13: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 14:58:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:00:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:00:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:02:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:02:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:02:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:03:03: 	All Designations Fetched Successfully![39m
[32m[info]: Nov-17-2023 15:03:59: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:04:00: 	Designation Updated Successfully![39m
[31m[error]: Nov-17-2023 15:04:08: 	Designation Not Found![39m
[31m[error]: Nov-17-2023 15:04:15: 	Designation Not Found![39m
[31m[error]: Nov-17-2023 15:04:25: 	Designation Not Found![39m
[32m[info]: Nov-17-2023 15:04:27: 	Designation Suspend/Deleted Successfully![39m
[32m[info]: Nov-17-2023 15:08:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:11:08: 	Single Department Fetched Successfully![39m
[32m[info]: Nov-17-2023 15:11:19: 	Single Department Updated Successfully![39m
[32m[info]: Nov-17-2023 15:11:33: 	Single Department Suspend/Deleted Successfully![39m
[32m[info]: Nov-17-2023 15:12:58: 	Single Department Updated Successfully![39m
[32m[info]: Nov-17-2023 15:16:16: 	Single Department Updated Successfully![39m
[32m[info]: Nov-17-2023 15:17:00: 	Single Department Fetched Successfully![39m
[32m[info]: Nov-17-2023 15:19:18: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:19:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:20:01: 	Single Department Suspend/Deleted Successfully![39m
[32m[info]: Nov-17-2023 15:21:18: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:21:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:21:47: 	Single Department Updated Successfully![39m
[32m[info]: Nov-17-2023 15:26:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:27:26: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:27:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:27:50: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 15:27:50: 	uncaughtException: Route.delete() requires a callback function but got a [object Undefined][39m
[31mError: Route.delete() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as delete] (D:\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at proto.<computed> [as delete] (D:\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:22:18)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-17-2023 15:27:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:28:00: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:28:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:28:49: 	User Deleted Successfully![39m
[32m[info]: Nov-17-2023 15:29:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:37:15: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:38:13: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:38:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:38:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:41:22: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 15:41:23: 	uncaughtException: Unexpected identifier 'loginUser'[39m
[31mD:\dpaoas\services\users.service.js:112[39m
[31m      loginUser: async (email, password, ipAddress) =>{[39m
[31m      ^^^^^^^^^[39m

[31mSyntaxError: Unexpected identifier 'loginUser'[39m
[31m    at internalCompileFunction (node:internal/vm:73:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1166:20)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1210:27)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at Object.<anonymous> (D:\dpaoas\controllers\users.controller.js:1:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[32m[info]: Nov-17-2023 15:41:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:42:32: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 15:42:32: 	uncaughtException: Unexpected identifier 'loginUser'[39m
[31mD:\dpaoas\controllers\users.controller.js:65[39m
[31mloginUser: async (req, res) => {[39m
[31m^^^^^^^^^[39m

[31mSyntaxError: Unexpected identifier 'loginUser'[39m
[31m    at internalCompileFunction (node:internal/vm:73:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1166:20)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1210:27)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:2:19)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[32m[info]: Nov-17-2023 15:43:01: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 15:43:01: 	uncaughtException: Unexpected identifier 'loginUser'[39m
[31mD:\dpaoas\controllers\users.controller.js:65[39m
[31mloginUser: async (req, res) => {[39m
[31m^^^^^^^^^[39m

[31mSyntaxError: Unexpected identifier 'loginUser'[39m
[31m    at internalCompileFunction (node:internal/vm:73:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1166:20)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1210:27)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:2:19)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[32m[info]: Nov-17-2023 15:59:06: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 15:59:06: 	uncaughtException: Unexpected identifier 'loginUser'[39m
[31mD:\dpaoas\controllers\users.controller.js:65[39m
[31mloginUser: async (req, res) => {[39m
[31m^^^^^^^^^[39m

[31mSyntaxError: Unexpected identifier 'loginUser'[39m
[31m    at internalCompileFunction (node:internal/vm:73:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1166:20)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1210:27)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:2:19)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[32m[info]: Nov-17-2023 15:59:10: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:59:18: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 15:59:27: 	Cannot read properties of undefined (reading 'params')[39m
[32m[info]: Nov-17-2023 15:59:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 15:59:47: 	 User Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:03:09: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:03:32: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:03:47: 	All Departments Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:04:15: 	All Departments Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:04:29: 	All Departments Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:04:44: 	All Departments Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:05:07: 	Department Created Successfully![39m
[32m[info]: Nov-17-2023 16:05:15: 	All Departments Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:05:23: 	All Departments Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:08:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:09:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:09:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:09:36: 	Searched Successfully[39m
[32m[info]: Nov-17-2023 16:09:43: 	All Departments Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:09:50: 	Searched Successfully[39m
[32m[info]: Nov-17-2023 16:09:57: 	Searched Successfully[39m
[32m[info]: Nov-17-2023 16:10:03: 	All Departments Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:10:56: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 16:11:10: 	Cannot read properties of undefined (reading 'query')[39m
[32m[info]: Nov-17-2023 16:12:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:12:12: 	All Designations Fetched Successfully![39m
[32m[info]: Nov-17-2023 16:12:30: 	Searched Successfully[39m
[32m[info]: Nov-17-2023 16:12:34: 	Searched Successfully[39m
[32m[info]: Nov-17-2023 16:12:35: 	Searched Successfully[39m
[32m[info]: Nov-17-2023 16:22:30: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-17-2023 16:22:40: 	Invalid Email![39m
[31m[error]: Nov-17-2023 16:23:52: 	Cannot access 'departmentId' before initialization[39m
[32m[info]: Nov-17-2023 16:25:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:28:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:28:55: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 16:31:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:31:30: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 16:32:35: 	User Logged In Successfully![39m
[32m[info]: Nov-17-2023 16:41:04: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:41:22: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-17-2023 16:41:25: 	User Logged In Successfully![39m
[32m[info]: Nov-18-2023 14:33:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:39:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:40:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:40:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:47:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:48:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:48:55: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-18-2023 14:48:57: 	uncaughtException: Joi.object.keys is not a function[39m
[31mTypeError: Joi.object.keys is not a function[39m
[31m    at Object.<anonymous> (D:\dpaoas\validation\userValidation.js:3:40)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:6:32)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[32m[info]: Nov-18-2023 14:49:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:53:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:53:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:54:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:55:15: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:56:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:56:21: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:56:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:59:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:59:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-18-2023 14:59:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 09:38:19: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 09:38:24: 	uncaughtException: Joi.email is not a function[39m
[31mTypeError: Joi.email is not a function[39m
[31m    at Object.<anonymous> (D:\dpaoas\validation\userValidation.js:5:14)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1127:19)[39m
[31m    at require (node:internal/modules/helpers:112:18)[39m
[31m    at Object.<anonymous> (D:\dpaoas\validation\index.js:1:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[32m[info]: Nov-20-2023 09:41:22: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 09:41:22: 	uncaughtException: Users is not defined[39m
[31mReferenceError: Users is not defined[39m
[31m    at module.exports (D:\dpaoas\routes\users.route.js:11:66)[39m
[31m    at Object.<anonymous> (D:\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1246:14)[39m
[31m    at Module._extensions..js (node:internal/modules/cjs/loader:1300:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:1103:32)[39m
[31m    at Module._load (node:internal/modules/cjs/loader:942:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)[39m
[31m    at node:internal/main/run_main_module:23:47[39m
[32m[info]: Nov-20-2023 09:41:45: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 09:59:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:00:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:01:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:02:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:02:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:03:23: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 10:03:28: 	error is not defined[39m
[31m[error]: Nov-20-2023 10:05:21: 	error is not defined[39m
[31m[error]: Nov-20-2023 10:05:42: 	error is not defined[39m
[32m[info]: Nov-20-2023 10:06:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:07:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:07:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:07:32: 	User Created Successfully![39m
[32m[info]: Nov-20-2023 10:07:38: 	User Created Successfully![39m
[32m[info]: Nov-20-2023 10:07:41: 	User Created Successfully![39m
[32m[info]: Nov-20-2023 10:10:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:46:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 10:53:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:30:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:37:35: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:38:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:38:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:39:56: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:40:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:54:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:54:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 11:55:00: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 11:55:01: 	uncaughtException: Route.get() requires a callback function but got a [object Undefined][39m
[31mError: Route.get() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:21:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 12:23:43: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 12:23:43: 	uncaughtException: Route.get() requires a callback function but got a [object Undefined][39m
[31mError: Route.get() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:21:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 13:00:18: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 13:00:18: 	uncaughtException: Route.get() requires a callback function but got a [object Undefined][39m
[31mError: Route.get() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:21:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 13:01:30: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 13:01:31: 	uncaughtException: Route.get() requires a callback function but got a [object Undefined][39m
[31mError: Route.get() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:21:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 13:01:46: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 13:01:46: 	uncaughtException: Route.get() requires a callback function but got a [object Undefined][39m
[31mError: Route.get() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:21:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 13:01:57: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 13:01:57: 	uncaughtException: Route.get() requires a callback function but got a [object Undefined][39m
[31mError: Route.get() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as get] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:21:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 13:02:16: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 13:02:16: 	uncaughtException: Route.put() requires a callback function but got a [object Undefined][39m
[31mError: Route.put() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as put] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as put] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:24:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 13:03:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 13:11:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 13:12:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 14:03:32: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:19:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:19:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:19:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:20:10: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:20:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:20:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:23:25: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:23:42: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:24:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:24:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:25:28: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:25:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:51:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:51:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:51:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:52:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:54:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:54:12: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:54:36: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:54:52: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 15:55:19: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:02:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:06:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:07:04: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:11:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:11:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:12:21: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:12:41: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:15:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:15:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:15:58: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:16:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:17:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:17:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:17:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:18:13: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 16:18:53: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 16:18:53: 	uncaughtException: createLeaveValidator is not defined[39m
[31mReferenceError: createLeaveValidator is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\index.js:7:3)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:6:38)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 16:19:06: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 16:19:06: 	uncaughtException: Identifier 'createRoleValidation' has already been declared[39m
[31mD:\senate\dpaoas\validation\index.js:3[39m
[31mconst createRoleValidation = require('./leaveValidation');[39m
[31m      ^[39m

[31mSyntaxError: Identifier 'createRoleValidation' has already been declared[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\users.route.js:6:38)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[32m[info]: Nov-20-2023 16:19:16: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 16:19:16: 	uncaughtException: createUserValidation is not defined[39m
[31mReferenceError: createUserValidation is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\leaveValidation.js:16:18)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\index.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 16:19:18: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 16:19:18: 	uncaughtException: createUserValidation is not defined[39m
[31mReferenceError: createUserValidation is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\leaveValidation.js:16:18)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\index.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 16:22:49: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 16:22:49: 	uncaughtException: createUserValidation is not defined[39m
[31mReferenceError: createUserValidation is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\leaveValidation.js:16:18)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\index.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 17:02:23: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:02:23: 	uncaughtException: Unexpected token 'export'[39m
[31mD:\senate\dpaoas\validation\leaveValidation.js:3[39m
[31mexport default {[39m
[31m^^^^^^[39m

[31mSyntaxError: Unexpected token 'export'[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\index.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 17:03:21: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:03:22: 	uncaughtException: Unexpected token ':'[39m
[31mD:\senate\dpaoas\validation\leaveValidation.js:7[39m
[31m            fkUserId: Joi.integer().required(),[39m
[31m                    ^[39m

[31mSyntaxError: Unexpected token ':'[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\index.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 17:04:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:07:04: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:14:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:15:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:19:42: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:19:42: 	uncaughtException: userController is not defined[39m
[31mReferenceError: userController is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:76:18)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:2:29)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 17:20:11: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:20:11: 	uncaughtException: userController is not defined[39m
[31mReferenceError: userController is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:76:18)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:2:29)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 17:20:28: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:20:28: 	uncaughtException: userController is not defined[39m
[31mReferenceError: userController is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:34:18)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:2:29)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 17:20:33: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:20:33: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:45)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 17:24:16: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:24:16: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:45)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 17:24:21: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:24:26: 	Please Provide Token![39m
[32m[info]: Nov-20-2023 17:24:40: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:24:44: 	validationResult is not defined[39m
[32m[info]: Nov-20-2023 17:24:59: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 17:25:03: 	winston is not defined[39m
[32m[info]: Nov-20-2023 17:25:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:25:31: 	LeaveController: createleave body {"fkRequestTypeId":"1","requestLeaveSubType":"1","requestStationLeave":true,"requestLeaveSubmittedTo":"2","requestLeaveApplyOnBehalf":true,"requestStartDate":"18-10-2023","requestEndDate":"20-10-2023","requestLeaveReason":"Bill for the Senate Employees"}[39m
[31m[error]: Nov-20-2023 17:25:31: 	Cannot destructure property 'fkRequestTypeId' of 'req.body' as it is undefined.[39m
[32m[info]: Nov-20-2023 17:26:11: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:26:33: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:26:38: 	LeaveController: createleave body {"fkRequestTypeId":"1","requestLeaveSubType":"1","requestStationLeave":true,"requestLeaveSubmittedTo":"2","requestLeaveApplyOnBehalf":true,"requestStartDate":"18-10-2023","requestEndDate":"20-10-2023","requestLeaveReason":"Bill for the Senate Employees"}[39m
[31m[error]: Nov-20-2023 17:26:38: 	Cannot destructure property 'fkRequestTypeId' of 'req.body' as it is undefined.[39m
[32m[info]: Nov-20-2023 17:27:13: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:27:17: 	LeaveController: createleave body {"fkRequestTypeId":"1","requestLeaveSubType":"1","requestStationLeave":true,"requestLeaveSubmittedTo":"2","requestLeaveApplyOnBehalf":true,"requestStartDate":"18-10-2023","requestEndDate":"20-10-2023","requestLeaveReason":"Bill for the Senate Employees"}[39m
[31m[error]: Nov-20-2023 17:27:17: 	invalid input syntax for type timestamp with time zone: "Invalid date"[39m
[32m[info]: Nov-20-2023 17:28:11: 	LeaveController: createleave body {"fkRequestTypeId":"1","requestLeaveSubType":"1","requestStationLeave":true,"requestLeaveSubmittedTo":"2","requestLeaveApplyOnBehalf":true,"requestStartDate":"18-10-2023 00:00:00","requestEndDate":"20-10-2023 00:00:00","requestLeaveReason":"Bill for the Senate Employees"}[39m
[31m[error]: Nov-20-2023 17:28:12: 	invalid input syntax for type timestamp with time zone: "Invalid date"[39m
[32m[info]: Nov-20-2023 17:28:21: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:28:25: 	LeaveController: createleave body {"fkRequestTypeId":"1","requestLeaveSubType":"1","requestStationLeave":true,"requestLeaveSubmittedTo":"2","requestLeaveApplyOnBehalf":true,"requestStartDate":"18-10-2023 00:00:00","requestEndDate":"20-10-2023 00:00:00","requestLeaveReason":"Bill for the Senate Employees"}[39m
[31m[error]: Nov-20-2023 17:28:25: 	invalid input syntax for type timestamp with time zone: "Invalid date"[39m
[32m[info]: Nov-20-2023 17:30:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 17:30:22: 	LeaveController: createleave body {"fkRequestTypeId":"1","requestLeaveSubType":"1","requestStationLeave":true,"requestLeaveSubmittedTo":"2","requestLeaveApplyOnBehalf":true,"requestStartDate":"18-10-2023 00:00:00","requestEndDate":"20-10-2023 00:00:00","requestLeaveReason":"Bill for the Senate Employees"}[39m
[31m[error]: Nov-20-2023 17:30:22: 	invalid input syntax for type date: "Invalid date"[39m
[32m[info]: Nov-20-2023 17:30:40: 	LeaveController: createleave body {"fkRequestTypeId":"1","requestLeaveSubType":"1","requestStationLeave":true,"requestLeaveSubmittedTo":"2","requestLeaveApplyOnBehalf":true,"requestStartDate":"18-10-2023","requestEndDate":"20-10-2023","requestLeaveReason":"Bill for the Senate Employees"}[39m
[31m[error]: Nov-20-2023 17:30:40: 	invalid input syntax for type date: "Invalid date"[39m
[32m[info]: Nov-20-2023 18:47:46: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:47:47: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:45)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:47:56: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 18:48:18: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:48:18: 	uncaughtException: missing ) after argument list[39m
[31mD:\senate\dpaoas\routes\leave.route.js:9[39m
[31m    router.post("/create" validate(paramValidator.createLeave), leaveController.createleave);[39m
[31m                ^^^^^^^^^[39m

[31mSyntaxError: missing ) after argument list[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 18:48:24: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:48:24: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:28)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:52:27: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:52:27: 	uncaughtException: Route.post() requires a callback function but got a [object Object][39m
[31mError: Route.post() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:52:41: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:52:41: 	uncaughtException: Route.post() requires a callback function but got a [object Object][39m
[31mError: Route.post() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:52:54: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:52:54: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:28)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:53:06: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:53:07: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:28)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:53:42: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:53:42: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:28)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:53:50: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:53:50: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:28)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:54:35: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:54:35: 	uncaughtException: router is not defined[39m
[31mReferenceError: router is not defined[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:8:5)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:55:01: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:55:01: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:28)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:55:23: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:55:23: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:8:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 18:56:20: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:56:20: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:8:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 18:56:23: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:56:23: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at module.exports (D:\senate\dpaoas\routes\leave.route.js:9:28)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[31m    at node:internal/main/run_main_module:17:47[39m
[32m[info]: Nov-20-2023 18:57:09: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:57:09: 	uncaughtException: Identifier 'express' has already been declared[39m
[31mD:\senate\dpaoas\routes\leave.route.js:17[39m
[31m    const express = require('express');[39m
[31m          ^[39m

[31mSyntaxError: Identifier 'express' has already been declared[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 18:57:30: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:57:30: 	uncaughtException: Identifier 'express' has already been declared[39m
[31mD:\senate\dpaoas\routes\leave.route.js:12[39m
[31mvar express = require("express");[39m
[31m    ^[39m

[31mSyntaxError: Identifier 'express' has already been declared[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 18:57:42: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:57:42: 	uncaughtException: Identifier 'express' has already been declared[39m
[31mD:\senate\dpaoas\routes\leave.route.js:12[39m
[31mvar express = require("express");[39m
[31m    ^[39m

[31mSyntaxError: Identifier 'express' has already been declared[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 18:58:22: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:58:22: 	uncaughtException: Identifier 'express' has already been declared[39m
[31mD:\senate\dpaoas\routes\leave.route.js:12[39m
[31mvar express = require("express");[39m
[31m    ^[39m

[31mSyntaxError: Identifier 'express' has already been declared[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 18:58:33: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:58:33: 	uncaughtException: validate is not a function[39m
[31mTypeError: validate is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:13:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 18:59:17: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:59:17: 	uncaughtException: {[39m
[31m  [41m"undefined"[0m[31m [1]: -- missing --[0m[39m
[31m}[39m
[31m[31m[39m
[31m[1] "value" must have at least 1 key[0m[39m
[31mValidationError: {[39m
[31m  [41m"undefined"[0m[31m [1]: -- missing --[0m[39m
[31m}[39m
[31m[31m[39m
[31m[1] "value" must have at least 1 key[0m[39m
[31m    at Object.exports.process (D:\senate\dpaoas\node_modules\joi\lib\errors.js:193:16)[39m
[31m    at Object.internals.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:250:26)[39m
[31m    at Object.exports.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:27:30)[39m
[31m    at internals.Base.validate (D:\senate\dpaoas\node_modules\joi\lib\base.js:548:26)[39m
[31m    at Object.internals.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:225:27)[39m
[31m    at Object.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:102:19)[39m
[31m    at exports.validate (D:\senate\dpaoas\node_modules\express-validation\lib\index.js:12:7)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:13:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 18:59:52: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 18:59:52: 	uncaughtException: Unexpected token ')'[39m
[31mD:\senate\dpaoas\routes\leave.route.js:13[39m
[31mrouter.post("/create", validateCreateLeave), leaveController.createleave);[39m
[31m                                                                        ^[39m

[31mSyntaxError: Unexpected token ')'[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 19:00:00: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:00:00: 	uncaughtException: Unexpected token ')'[39m
[31mD:\senate\dpaoas\routes\leave.route.js:13[39m
[31mrouter.post("/create", validateCreateLeave), leaveController.createleave);[39m
[31m                                                                        ^[39m

[31mSyntaxError: Unexpected token ')'[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 19:00:15: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:00:15: 	uncaughtException: validateCreateLeave is not defined[39m
[31mReferenceError: validateCreateLeave is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:13:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 19:00:34: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:00:34: 	uncaughtException: Route.post() requires a callback function but got a [object Undefined][39m
[31mError: Route.post() requires a callback function but got a [object Undefined][39m
[31m    at Route.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:13:8)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[32m[info]: Nov-20-2023 19:02:20: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:02:20: 	uncaughtException: {[39m
[31m  [41m"undefined"[0m[31m [1]: -- missing --[0m[39m
[31m}[39m
[31m[31m[39m
[31m[1] "value" must have at least 1 key[0m[39m
[31mValidationError: {[39m
[31m  [41m"undefined"[0m[31m [1]: -- missing --[0m[39m
[31m}[39m
[31m[31m[39m
[31m[1] "value" must have at least 1 key[0m[39m
[31m    at Object.exports.process (D:\senate\dpaoas\node_modules\joi\lib\errors.js:193:16)[39m
[31m    at Object.internals.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:250:26)[39m
[31m    at Object.exports.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:27:30)[39m
[31m    at internals.Base.validate (D:\senate\dpaoas\node_modules\joi\lib\base.js:548:26)[39m
[31m    at Object.internals.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:225:27)[39m
[31m    at Object.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:102:19)[39m
[31m    at exports.validate (D:\senate\dpaoas\node_modules\express-validation\lib\index.js:12:7)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:12:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 19:02:57: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:02:58: 	uncaughtException: {[39m
[31m  "body" [31m[1][0m: {[39m
[31m    "fkRequestTypeId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "fkUserId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestStartDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestEndDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveSubType": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveReason": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    }[39m
[31m  }[39m
[31m}[39m
[31m[31m[39m
[31m[1] "body" must be a Joi schema of any type[0m[39m
[31mValidationError: {[39m
[31m  "body" [31m[1][0m: {[39m
[31m    "fkRequestTypeId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "fkUserId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestStartDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestEndDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveSubType": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveReason": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    }[39m
[31m  }[39m
[31m}[39m
[31m[31m[39m
[31m[1] "body" must be a Joi schema of any type[0m[39m
[31m    at Object.exports.process (D:\senate\dpaoas\node_modules\joi\lib\errors.js:193:16)[39m
[31m    at Object.internals.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:250:26)[39m
[31m    at Object.exports.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:27:30)[39m
[31m    at internals.Base.validate (D:\senate\dpaoas\node_modules\joi\lib\base.js:548:26)[39m
[31m    at Object.internals.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:225:27)[39m
[31m    at Object.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:102:19)[39m
[31m    at exports.validate (D:\senate\dpaoas\node_modules\express-validation\lib\index.js:12:7)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:12:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 19:03:16: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:03:17: 	uncaughtException: {[39m
[31m  "body" [31m[1][0m: {[39m
[31m    "fkRequestTypeId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "fkUserId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestStartDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestEndDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveSubType": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveReason": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    }[39m
[31m  }[39m
[31m}[39m
[31m[31m[39m
[31m[1] "body" must be a Joi schema of any type[0m[39m
[31mValidationError: {[39m
[31m  "body" [31m[1][0m: {[39m
[31m    "fkRequestTypeId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "fkUserId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestStartDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestEndDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveSubType": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveReason": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    }[39m
[31m  }[39m
[31m}[39m
[31m[31m[39m
[31m[1] "body" must be a Joi schema of any type[0m[39m
[31m    at Object.exports.process (D:\senate\dpaoas\node_modules\joi\lib\errors.js:193:16)[39m
[31m    at Object.internals.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:250:26)[39m
[31m    at Object.exports.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:27:30)[39m
[31m    at internals.Base.validate (D:\senate\dpaoas\node_modules\joi\lib\base.js:548:26)[39m
[31m    at Object.internals.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:225:27)[39m
[31m    at Object.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:102:19)[39m
[31m    at exports.validate (D:\senate\dpaoas\node_modules\express-validation\lib\index.js:12:7)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:7:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 19:04:44: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:04:44: 	uncaughtException: {[39m
[31m  "body" [31m[1][0m: {[39m
[31m    "fkRequestTypeId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "fkUserId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestStartDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestEndDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveSubType": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveReason": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    }[39m
[31m  }[39m
[31m}[39m
[31m[31m[39m
[31m[1] "body" must be a Joi schema of any type[0m[39m
[31mValidationError: {[39m
[31m  "body" [31m[1][0m: {[39m
[31m    "fkRequestTypeId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "fkUserId": {[39m
[31m      "type": "number",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestStartDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestEndDate": {[39m
[31m      "type": "date",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveSubType": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    },[39m
[31m    "requestLeaveReason": {[39m
[31m      "type": "string",[39m
[31m      "$_root": {[39m
[31m        "_types": {},[39m
[31m        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },[39m
[31m        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",[39m
[31m        "version": "17.11.0",[39m
[31m        "cache": {[39m
[31m          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"[39m
[31m        },[39m
[31m        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",[39m
[31m        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",[39m
[31m        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",[39m
[31m        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",[39m
[31m        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",[39m
[31m        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",[39m
[31m        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",[39m
[31m        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",[39m
[31m        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",[39m
[31m        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},[39m
[31m        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},[39m
[31m        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",[39m
[31m        "override": Symbol(override),[39m
[31m        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",[39m
[31m        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",[39m
[31m        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },[39m
[31m        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",[39m
[31m        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },[39m
[31m        "untrace": () => {\n\n        root._tracer = null;\n    }[39m
[31m      },[39m
[31m      "$_temp": {[39m
[31m        "ruleset": false,[39m
[31m        "whens": {}[39m
[31m      },[39m
[31m      "_ids": {[39m
[31m        "_byId": {},[39m
[31m        "_byKey": {},[39m
[31m        "_schemaChain": false[39m
[31m      },[39m
[31m      "_preferences": null,[39m
[31m      "_valids": null,[39m
[31m      "_invalids": null,[39m
[31m      "_rules": [],[39m
[31m      "_singleRules": {},[39m
[31m      "_refs": {[39m
[31m        "refs": [][39m
[31m      },[39m
[31m      "_flags": {[39m
[31m        "presence": "required"[39m
[31m      },[39m
[31m      "_cache": null,[39m
[31m      "$_terms": {[39m
[31m        "alterations": null,[39m
[31m        "examples": null,[39m
[31m        "externals": null,[39m
[31m        "metas": [],[39m
[31m        "notes": [],[39m
[31m        "shared": null,[39m
[31m        "tags": [],[39m
[31m        "whens": null,[39m
[31m        "replacements": null[39m
[31m      },[39m
[31m      "$_super": {}[39m
[31m    }[39m
[31m  }[39m
[31m}[39m
[31m[31m[39m
[31m[1] "body" must be a Joi schema of any type[0m[39m
[31m    at Object.exports.process (D:\senate\dpaoas\node_modules\joi\lib\errors.js:193:16)[39m
[31m    at Object.internals.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:250:26)[39m
[31m    at Object.exports.entry (D:\senate\dpaoas\node_modules\joi\lib\validator.js:27:30)[39m
[31m    at internals.Base.validate (D:\senate\dpaoas\node_modules\joi\lib\base.js:548:26)[39m
[31m    at Object.internals.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:225:27)[39m
[31m    at Object.assert (D:\senate\dpaoas\node_modules\joi\lib\index.js:102:19)[39m
[31m    at exports.validate (D:\senate\dpaoas\node_modules\express-validation\lib\index.js:12:7)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:7:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 19:04:55: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:04:55: 	uncaughtException: Cannot read properties of undefined (reading 'apply')[39m
[31mTypeError: Cannot read properties of undefined (reading 'apply')[39m
[31m    at D:\senate\dpaoas\node_modules\express\lib\router\index.js:646:15[39m
[31m    at next (D:\senate\dpaoas\node_modules\express\lib\router\index.js:216:14)[39m
[31m    at Function.handle (D:\senate\dpaoas\node_modules\express\lib\router\index.js:175:3)[39m
[31m    at router (D:\senate\dpaoas\node_modules\express\lib\router\index.js:47:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[32m[info]: Nov-20-2023 19:04:57: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:04:57: 	uncaughtException: Cannot read properties of undefined (reading 'apply')[39m
[31mTypeError: Cannot read properties of undefined (reading 'apply')[39m
[31m    at D:\senate\dpaoas\node_modules\express\lib\router\index.js:646:15[39m
[31m    at next (D:\senate\dpaoas\node_modules\express\lib\router\index.js:216:14)[39m
[31m    at Function.handle (D:\senate\dpaoas\node_modules\express\lib\router\index.js:175:3)[39m
[31m    at router (D:\senate\dpaoas\node_modules\express\lib\router\index.js:47:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[32m[info]: Nov-20-2023 19:05:04: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:05:04: 	uncaughtException: Cannot read properties of undefined (reading 'apply')[39m
[31mTypeError: Cannot read properties of undefined (reading 'apply')[39m
[31m    at D:\senate\dpaoas\node_modules\express\lib\router\index.js:646:15[39m
[31m    at next (D:\senate\dpaoas\node_modules\express\lib\router\index.js:216:14)[39m
[31m    at Function.handle (D:\senate\dpaoas\node_modules\express\lib\router\index.js:175:3)[39m
[31m    at router (D:\senate\dpaoas\node_modules\express\lib\router\index.js:47:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[32m[info]: Nov-20-2023 19:06:03: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:06:03: 	uncaughtException: Identifier 'express' has already been declared[39m
[31mD:\senate\dpaoas\routes\leave.route.js:7[39m
[31mconst express = require('express');[39m
[31m      ^[39m

[31mSyntaxError: Identifier 'express' has already been declared[39m
[31m    at Object.compileFunction (node:vm:352:18)[39m
[31m    at wrapSafe (node:internal/modules/cjs/loader:1031:15)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1065:27)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:1)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[32m[info]: Nov-20-2023 19:06:18: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:06:18: 	uncaughtException: Cannot read properties of undefined (reading 'apply')[39m
[31mTypeError: Cannot read properties of undefined (reading 'apply')[39m
[31m    at D:\senate\dpaoas\node_modules\express\lib\router\index.js:646:15[39m
[31m    at next (D:\senate\dpaoas\node_modules\express\lib\router\index.js:216:14)[39m
[31m    at Function.handle (D:\senate\dpaoas\node_modules\express\lib\router\index.js:175:3)[39m
[31m    at router (D:\senate\dpaoas\node_modules\express\lib\router\index.js:47:12)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:21:32)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)[39m
[32m[info]: Nov-20-2023 19:08:06: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:08:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:13:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:15:35: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:16:10: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:16:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:17:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:18:48: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:20:10: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:22:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:28:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:28:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:32:54: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:34:33: 	validationResult is not defined[39m
[32m[info]: Nov-20-2023 19:34:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:36:16: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:36:16: 	uncaughtException: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31mError: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31m    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:778:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[32m[info]: Nov-20-2023 19:36:39: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:36:39: 	uncaughtException: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31mError: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31m    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:778:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[32m[info]: Nov-20-2023 19:36:48: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:36:48: 	uncaughtException: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31mError: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31m    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:778:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[32m[info]: Nov-20-2023 19:37:31: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:37:31: 	uncaughtException: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31mError: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31m    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:778:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[32m[info]: Nov-20-2023 19:37:39: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:37:39: 	uncaughtException: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31mError: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31m    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:778:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[32m[info]: Nov-20-2023 19:37:51: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:37:51: 	uncaughtException: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31mError: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31m    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:778:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[32m[info]: Nov-20-2023 19:37:54: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 19:37:54: 	uncaughtException: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31mError: Cannot find module 'express-validator'[39m
[31mRequire stack:[39m
[31m- D:\senate\dpaoas\controllers\leave.controller.js[39m
[31m- D:\senate\dpaoas\routes\leave.route.js[39m
[31m- D:\senate\dpaoas\server.js[39m
[31m    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:778:27)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\controllers\leave.controller.js:3:30)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[32m[info]: Nov-20-2023 19:38:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:38:53: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":2,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"Vacation","requestLeaveReason":"Need a break","requestStationLeave":true}[39m
[31m[error]: Nov-20-2023 19:38:53: 	invalid input value for enum "enum_requestLeaves_requestLeaveSubType": "Vacation"[39m
[32m[info]: Nov-20-2023 19:39:32: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":2,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break","requestStationLeave":true}[39m
[31m[error]: Nov-20-2023 19:39:33: 	insert or update on table "requestLeaves" violates foreign key constraint "requestLeaves_fkRequestTypeId_fkey"[39m
[32m[info]: Nov-20-2023 19:39:40: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:39:46: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":2,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break","requestStationLeave":true}[39m
[31m[error]: Nov-20-2023 19:39:46: 	insert or update on table "requestLeaves" violates foreign key constraint "requestLeaves_fkRequestTypeId_fkey"[39m
[32m[info]: Nov-20-2023 19:51:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:51:39: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":2,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break","requestStationLeave":true}[39m
[31m[error]: Nov-20-2023 19:51:39: 	insert or update on table "requestLeaves" violates foreign key constraint "requestLeaves_fkUserId_fkey"[39m
[32m[info]: Nov-20-2023 19:54:34: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":2,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break","requestStationLeave":true}[39m
[31m[error]: Nov-20-2023 19:54:34: 	insert or update on table "requestLeaves" violates foreign key constraint "requestLeaves_fkUserId_fkey"[39m
[32m[info]: Nov-20-2023 19:54:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 19:54:50: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":2,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break","requestStationLeave":true}[39m
[31m[error]: Nov-20-2023 19:54:50: 	insert or update on table "requestLeaves" violates foreign key constraint "requestLeaves_fkUserId_fkey"[39m
[32m[info]: Nov-20-2023 19:54:59: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 19:54:59: 	Leave Request submitted Successfully![39m
[32m[info]: Nov-20-2023 19:58:35: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 19:58:35: 	Leave Request submitted Successfully![39m
[32m[info]: Nov-20-2023 19:58:48: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-21T00:00:00.000Z","requestEndDate":"2023-11-23T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistan","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 19:58:48: 	Leave Request submitted Successfully![39m
[32m[info]: Nov-20-2023 19:59:53: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:15:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:19:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:19:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:42:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:42:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:43:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:46:30: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:47:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:47:18: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:47:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:48:10: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 20:48:10: 	uncaughtException: router.update is not a function[39m
[31mTypeError: router.update is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:15:8)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 20:48:31: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:49:21: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistan","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 20:49:21: 	Leave Request submitted Successfully![39m
[32m[info]: Nov-20-2023 20:49:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:49:55: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistan","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 20:49:55: 	Leave Request submitted Successfully![39m
[32m[info]: Nov-20-2023 20:50:10: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistan","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 20:50:11: 	Leave Request submitted Successfully![39m
[32m[info]: Nov-20-2023 20:50:37: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 20:50:39: 	winston is not defined[39m
[32m[info]: Nov-20-2023 20:50:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 20:50:52: 	LeaveController: updateLeaveRequest id 6 and body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistan","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 20:50:52: 	Leave Request Updated Successfully![39m
[32m[info]: Nov-20-2023 20:51:13: 	LeaveController: updateLeaveRequest id 6 and body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistans","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 20:51:13: 	Leave Request Updated Successfully![39m
[32m[info]: Nov-20-2023 23:06:39: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:07:55: 	LeaveController: updateLeaveRequest id create and body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistans","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 23:07:55: 	Leave Request Updated Successfully![39m
[31m[error]: Nov-20-2023 23:07:55: 	Cannot read properties of undefined (reading 'insertId')[39m
[32m[info]: Nov-20-2023 23:08:48: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistans","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 23:08:48: 	Leave Request submitted Successfully![39m
[32m[info]: Nov-20-2023 23:10:23: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:10:49: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:11:55: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:11:56: 	uncaughtException: Route.post() requires a callback function but got a [object Object][39m
[31mError: Route.post() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:13:8)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[32m[info]: Nov-20-2023 23:12:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:13:28: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:13:28: 	uncaughtException: Route.post() requires a callback function but got a [object Object][39m
[31mError: Route.post() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:13:8)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[32m[info]: Nov-20-2023 23:18:07: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:18:07: 	uncaughtException: Route.post() requires a callback function but got a [object Object][39m
[31mError: Route.post() requires a callback function but got a [object Object][39m
[31m    at Route.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\route.js:211:15)[39m
[31m    at Function.proto.<computed> [as post] (D:\senate\dpaoas\node_modules\express\lib\router\index.js:521:19)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:13:8)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[32m[info]: Nov-20-2023 23:18:20: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:18:20: 	uncaughtException: validateRequest is not defined[39m
[31mReferenceError: validateRequest is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:13:8)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 23:18:55: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:18:55: 	uncaughtException: paramValidator is not defined[39m
[31mReferenceError: paramValidator is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:12:40)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 23:20:02: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:20:16: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:21:27: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:23:50: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:24:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:24:34: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:27:08: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:29:53: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:29:53: 	uncaughtException: validateRequest is not a function[39m
[31mTypeError: validateRequest is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:12:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 23:30:13: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:30:13: 	uncaughtException: validateRequest is not a function[39m
[31mTypeError: validateRequest is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:12:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 23:31:28: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:31:29: 	uncaughtException: validateRequest is not a function[39m
[31mTypeError: validateRequest is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:12:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 23:31:41: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:31:41: 	uncaughtException: validateRequest is not a function[39m
[31mTypeError: validateRequest is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:12:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 23:32:04: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:32:04: 	uncaughtException: validateRequest is not a function[39m
[31mTypeError: validateRequest is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:12:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:11:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 23:32:31: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:33:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:33:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:34:20: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:34:55: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:36:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:37:57: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:40:03: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:40:24: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:40:44: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:41:01: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:41:22: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:41:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:42:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:42:35: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:43:17: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:44:35: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:45:14: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:45:37: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:45:51: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:48:46: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:49:18: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:49:43: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-20-2023 23:49:54: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a break from Pakistans","requestStationLeave":true}[39m
[32m[info]: Nov-20-2023 23:49:54: 	Leave Request submitted Successfully![39m
[32m[info]: Nov-20-2023 23:52:15: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-20-2023 23:52:16: 	uncaughtException: validator.body(...).then is not a function[39m
[31mTypeError: validator.body(...).then is not a function[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:8:58)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:12:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-20-2023 23:54:29: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-21-2023 00:03:35: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-21-2023 00:03:36: 	uncaughtException: createLeaveSchema is not defined[39m
[31mReferenceError: createLeaveSchema is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\validation\leaveValidation.js:19:20)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:4:31)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-21-2023 00:04:18: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-21-2023 00:05:50: 	Server Logger has been started Successfully[39m
[31m[error]: Nov-21-2023 00:05:50: 	uncaughtException: createLeaveSchema is not defined[39m
[31mReferenceError: createLeaveSchema is not defined[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\routes\leave.route.js:9:24)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[31m    at Module.load (node:internal/modules/cjs/loader:981:32)[39m
[31m    at Function.Module._load (node:internal/modules/cjs/loader:822:12)[39m
[31m    at Module.require (node:internal/modules/cjs/loader:1005:19)[39m
[31m    at require (node:internal/modules/cjs/helpers:102:18)[39m
[31m    at Object.<anonymous> (D:\senate\dpaoas\server.js:12:21)[39m
[31m    at Module._compile (node:internal/modules/cjs/loader:1101:14)[39m
[31m    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)[39m
[32m[info]: Nov-21-2023 00:05:54: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-21-2023 09:47:47: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-21-2023 09:48:07: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-21-2023 09:48:19: 	LeaveController: createleave body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a breaks from Pakistans","requestStationLeave":true}[39m
[32m[info]: Nov-21-2023 09:48:19: 	Leave Request submitted Successfully![39m
[31m[error]: Nov-21-2023 09:49:05: 	validationResult is not defined[39m
[32m[info]: Nov-21-2023 09:49:22: 	Server Logger has been started Successfully[39m
[32m[info]: Nov-21-2023 09:49:25: 	LeaveController: updateLeaveRequest id 13 and body {"fkRequestTypeId":1,"fkUserId":1,"requestStartDate":"2023-11-10T00:00:00.000Z","requestEndDate":"2023-11-15T00:00:00.000Z","requestLeaveSubType":"preApproved","requestLeaveReason":"Need a breaks from Pakistans","requestStationLeave":true}[39m
[32m[info]: Nov-21-2023 09:49:25: 	Leave Request Updated Successfully![39m
